[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What type of graph is a dag?
--InteriorSeparator--
Directed acyclic graph
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the property of function Ord in a topological ordering of a digraph G = (V, E)?
--InteriorSeparator--
For every edge (u,v) in E, Ord[u] < Ord[v]
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following is/are correct about topological ordering?
--InteriorSeparator--
(right) A digraph G = (V, E) without cycles has a topological ordering.
(wrong) A digraph G = (V, E) always has a topological ordering.
(wrong) A digraph G = (V, E) with cycles has a topological ordering.
(right/wrong) A digraph G = (V, E) with a topological ordering has no cycles.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the algorithm for recognizing dags, what does the array 'd' represent?
--InteriorSeparator--
The in-degree of each vertex u ∈ V
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What data structure(s) can be used for S in the dag recognition algorithm?
--InteriorSeparator--
(right) Stack
(right) Queue
(wrong) Linked List
(wrong) Binary Tree
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the dag recognition algorithm?
--InteriorSeparator--
O(n + m)
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is P2?
--InteriorSeparator--
Finding shortest paths from a source vertex s to all other vertices in a digraph
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is problem P2 solved for dags?
--InteriorSeparator--
Topological sorting
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the property (I) that holds when solving P2 for dags?
--InteriorSeparator--
The system (B) can be solved by "substitution."
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What algorithm can be used to solve P2 when edge costs are non-negative?
--InteriorSeparator--
Dijkstra's algorithm
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What invariant does Dijkstra's algorithm maintain?
--InteriorSeparator--
Vv ∈ S, dv = min{cost(Ps,v) : Ps,v ∈ Ps,v} and Vv ∈ V \ S, dv = min{cost(Ps,v) : Ps,v ∈ Ps,v, V(Ps,v) \ S = {v}}
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the steps involved in Dijkstra's algorithm?
--InteriorSeparator--
(right) Initialize S with the source vertex.
(right) Repeatedly select the vertex with the minimum distance outside of S and add it to S
(wrong) Always explore every possible path.
(wrong) Terminate if target is not found
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the condition for using Dijkstra's algorithm?
--InteriorSeparator--
All edge weights must be non-negative.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If Dijkstra's algorithm is implemented using a Fibonacci heap, what is its time complexity?
--InteriorSeparator--
O(m + n log n)
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What data structure(s) can be used to implement a priority queue in Dijkstra's algorithm?
--InteriorSeparator--
(right) Heap
(right) Fibonacci heap
(wrong) Stack
(wrong) Queue
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a consistent estimator used for in Dijkstra's algorithm?
--InteriorSeparator--
Directing the search toward the target vertex.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What conditions must a consistent estimator 'g' satisfy?
--InteriorSeparator--
(right) g(i) + w(i,j) ≥ g(j)
(right) Vi ∈ V, di + g(i) ≤ min{cost(Ps,t) : Ps,t ∈ Ps,t and i ∈ V(Ps,t)}
(wrong) g(i) < 0
(wrong) g(i) + w(i,j) <= g(j)
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the Bellman-Ford-Moore algorithm used for?
--InteriorSeparator--
Solving the single-source shortest path problem with possibly negative edge weights
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a key assumption for the Bellman-Ford-Moore algorithm to work correctly?
--InteriorSeparator--
There are no negative cost cycles in the graph.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the Bellman-Ford-Moore algorithm?
--InteriorSeparator--
O(n^3)
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the Bellman-Ford-Moore algorithm do if there is a negative-cost cycle?
--InteriorSeparator--
(right) It can detect its presence
(wrong) It always fails to find the shortest paths
(right/wrong) It can find the shortest paths if the negative cycle is not reachable from the source
(wrong) It outputs incorrect shortest paths
--InteriorSeparator--
hard
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is problem P3?
--InteriorSeparator--
Finding all-pairs shortest paths in a digraph
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If all costs are non-negative, how can P3 be solved efficiently?
--InteriorSeparator--
By applying Dijkstra's algorithm for each vertex as the source, resulting in O(n^3) time complexity
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is Johnson's algorithm used for?
--InteriorSeparator--
Solving the all-pairs shortest path problem with negative edge weights (but no negative cycles)
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of reweighting the edges in Johnson's algorithm?
--InteriorSeparator--
To create non-negative edge weights so Dijkstra's algorithm can be used.
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the steps involved in Johnson's algorithm?
--InteriorSeparator--
(right) Find a function h: V -> R, such that for all edges (u, v), h(u) + w(u, v) >= h(v)
(right) Reweight each edge using this function: w'(u, v) = w(u, v) + h(u) - h(v)
(wrong) Do nothing
(wrong) Double the weights of each edge
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is the function 'a' constructed in Johnson's algorithm?
--InteriorSeparator--
By solving P2 with the Bellman-Ford-Moore algorithm.
--InteriorSeparator--
hard
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the Floyd-Warshall algorithm used for?
--InteriorSeparator--
Solving the all-pairs shortest path problem.
--InteriorSeparator--
easy
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the Floyd-Warshall algorithm?
--InteriorSeparator--
O(n^3)
--InteriorSeparator--
easy
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How does the Floyd-Warshall algorithm handle negative cost cycles?
--InteriorSeparator--
(right) It can detect them.
(wrong) It correctly computes shortest paths in their presence.
(wrong) It ignores them.
(right/wrong) Shortest paths may not be computed accurately.
--InteriorSeparator--
medium
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the diagonal entry represent in the Floyd-Warshall algorithm after it has been executed?
--InteriorSeparator--
The minimum cost of a cycle passing through the corresponding vertex.
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What matrix operation can be used to describe iterating the Bellman-Ford-Moore algorithm?
--InteriorSeparator--
Matrix multiplication
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity for solving P3 using (fast) matrix-multiplication?
--InteriorSeparator--
O(n^3 log n)
--InteriorSeparator--
hard
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
The time complexity for fast matrix multiplication based algorithms can be written as O(n^x). Which of the following is/are value(s) of x?
--InteriorSeparator--
(right) log2 7 ≈ 2.81
(right) 2.3728639
(wrong) 4
(wrong) 1
--InteriorSeparator--
hard
--InteriorSeparator--
33
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.1783812382579117}]