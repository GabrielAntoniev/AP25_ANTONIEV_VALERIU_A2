[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the Bellman-Ford-Moore algorithm if the minimum in the second for loop needs Θ(n) time?
--InteriorSeparator--
Θ(n³)
--InteriorSeparator--
medium
--InteriorSeparator--
1
--FlashCardSeparator--
Single
--InteriorSeparator--
What data structure is used in a typical implementation of Dijkstra's algorithm to maintain the values of vertices not yet in the set S?
--InteriorSeparator--
Priority queue
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a directed acyclic graph (DAG)?
--InteriorSeparator--
(right) A digraph without cycles
(wrong) A graph with no vertices
(wrong) A graph with no edges
(right) A directed graph without cycles
--InteriorSeparator--
easy
--InteriorSeparator--
10
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a topological ordering of a digraph G = (V, E) with |V| = n?
--InteriorSeparator--
(right) An injective function ord: V -> {1, 2, ..., n} such that u -> v ∈ E => ord[u] < ord[v]
(wrong) An injective function ord: V -> {1, 2, ..., n} such that u -> v ∈ E => ord[u] > ord[v]
(wrong) Any ordering of the vertices
(wrong) The reverse of topological ordering
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--
Single
--InteriorSeparator--
If a digraph has no cycles, does it have a topological ordering?
--InteriorSeparator--
Yes
--InteriorSeparator--
easy
--InteriorSeparator--
10
--FlashCardSeparator--
Single
--InteriorSeparator--
What condition is checked in the Bellman-Ford-Moore algorithm to detect negative cost cycles?
--InteriorSeparator--
If there exists a vertex 'v' such that u_v > min_j((u_j + a_jv))
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity of the Floyd-Warshall algorithm?
--InteriorSeparator--
(right) Θ(n³)
(wrong) Θ(n²)
(wrong) Θ(n log n)
(wrong) Θ(m + n)
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--
Single
--InteriorSeparator--
In Dijkstra's algorithm, what does the set S represent?
--InteriorSeparator--
The set of vertices for which the shortest path from the source is known.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main idea behind Dijkstra's algorithm?
--InteriorSeparator--
Greedily select the unvisited vertex with the smallest tentative distance from the source.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What condition must a cost function 'a' satisfy for Dijkstra's algorithm to guarantee finding the shortest paths?
--InteriorSeparator--
(right) a(e) >= 0 for all edges e in E
(wrong) a(e) <= 0 for all edges e in E
(wrong) a(e) == 0 for all edges e in E
(wrong) a(e) can be any real number
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What does an SP-tree represent?
--InteriorSeparator--
A directed rooted tree such that the path cost from the root to any vertex is the shortest path cost in the original graph.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--
Single
--InteriorSeparator--
When should the Bellman-Ford-Moore algorithm be used instead of Dijkstra's algorithm?
--InteriorSeparator--
When the graph contains negative-cost edges.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key property that Iterating Dijkstra's algorithm leverages?
--InteriorSeparator--
A path is of minimum cost with respect to cost E if and only if it is of minimum cost with respect to cost a (where a is the original cost).
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--
Single
--InteriorSeparator--
What does the matrix 'Before' store in the Floyd-Warshall algorithm?
--InteriorSeparator--
The vertex before j on the shortest path from i to j.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the meaning of 'AU(k)' in the context of matrix-multiplication for shortest paths?
--InteriorSeparator--
The shortest path with at most k arcs
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--
Single
--InteriorSeparator--
What is a consistent estimator in the context of the A* algorithm?
--InteriorSeparator--
A function g: V -> R+ satisfying two conditions: (i) Vi ∈ V, u_i + g(i) <= min{a(P_st) : P_st ∈ P_st and i ∈ V(P_st)}, and (ii) ∀ij ∈ E, g(i) <= a_ij + g(j).
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is Dijkstra's algorithm modified to solve the single-source shortest path problem on a graph with non-negative edge weights if you only care about the shortest path to a specific target vertex 't'?
--InteriorSeparator--
(right) Add a test to stop the execution when the target vertex t is introduced in S.
(wrong) Continue the algorithm until all nodes have been visited.
(wrong) Run the algorithm twice, once from the source and once from the target.
(wrong) Do nothing the normal algorithim is already optimal
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of finding a SP-topological ordering of the vertices of G?
--InteriorSeparator--
Θ(|V| + |E|)
--InteriorSeparator--
hard
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the formula for calculating the new edge cost E_ij when iterating Dijkstra's algorithm with negative costs?
--InteriorSeparator--
E_ij = a_ij + φ(i) - φ(j)
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity to find a cycle C* of D, such that agvg = min {agvg(C) : C cycle in D}?
--InteriorSeparator--
(wrong) O(n + m)
(wrong) O(n^2)
(right) O(nm)
(wrong) O(n log n)
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the 'fast' matrix multiplication approach to solving the all-pairs shortest path problem, what operation replaces standard matrix multiplication?
--InteriorSeparator--
(wrong) Standard Matrix Multiplication
(wrong) Matrix Addition
(right) B ⊗ C : P = (p_ij), where p_ij = min_k(b_ik + c_kj)
(wrong) Bitwise AND
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--
Single
--InteriorSeparator--
How can Dijkstra's algorithm fail in a graph with negative-cost arcs?
--InteriorSeparator--
The "best first" strategy does not work.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What condition must be satisfied when computing shortest paths with bellman-ford more algorithm?
--InteriorSeparator--
a(C) >= 0, VC cycle in G
--InteriorSeparator--
hard
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What kind of heap will result in the best implementation of dijkstras algorithim?
--InteriorSeparator--
Fibonacci heap
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--
Single
--InteriorSeparator--
Explain how to implement bellman ford more algorithm
--InteriorSeparator--
1) usl P 0;
2) for (i E V \ {5}) do
3) u} k a“; //obviously (BM) holds.
4) for (k : m) d0
5) for (z' : U) do
6) 11.er1 <— min (uZ-k, minjﬂ (qu + 09-1));
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--
Single
--InteriorSeparator--
what is shortest paths - Solving all-pairs shortest path problem P3
--InteriorSeparator--
Given G : (V, E) a digraph and a: E —> 1R ﬁnd Pg; € Piﬁvnj € V, s. t. a(PZ‘j) = min{a(Pij) : P17‘ E 7317'}
--InteriorSeparator--
hard
--InteriorSeparator--
3
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a topological order?
--InteriorSeparator--
(wrong) ordering of node degrees
(wrong) alphabetical ordering
(right) ordering of the nodes with respect to directed edges
(wrong) reverse alphabetical ordering
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which sorting algorithm will you use to implement Topological sorting?
--InteriorSeparator--
(wrong) merge sort
(wrong) bubble sort
(right) Kahn's Algorithm
(right) DFS algorithm
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Multiple
--InteriorSeparator--
How to implement dijkstras algorithm?
--InteriorSeparator--
(wrong) only search nearby nodes
(right) Initialize all nodes to infinity distance
(right) Start at the root node
(wrong) traverse random nodes
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
If there is k < n - 1 such that u^k = u^(k+1), then the algorithm can be stopped. What alogorithm does this apply to?
--InteriorSeparator--
Bellman-Ford-Moore algorithm
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--
Single
--InteriorSeparator--
What property must be satisfied for SP-topological ordering algorithm to work?
--InteriorSeparator--
u_j v_i belongs to E, with 1 <= i < j <= n, the vertices v_i, v_(i+1),...,v_j belong to the same strongly connected component of G.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--
Single
--InteriorSeparator--
Explain why Dijkstra's algorithm fails with negative cost arcs.
--InteriorSeparator--
Because the "best first" strategy does not work.
--InteriorSeparator--
hard
--InteriorSeparator--
3
}], role=model}, finishReason=STOP, avgLogprobs=-0.2813856542155564}]